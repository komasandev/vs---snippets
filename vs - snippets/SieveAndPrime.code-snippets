{
	"FILE CB": {
	"scope": "",
	"prefix": "sieveandprime",
	"body": [
"void SieveOnRange(long long l, long long r) {",
"",
"    vector<bool> P(r - l + 1ll, true);",
"",
"    for (long long i = 2ll; i <= sqrt(r); i++)",
"        for (long long j = max(i * i, (l + i - 1ll) / i * i); j <= r; j += i)",
"            P[j - l] = false;",
"",
"    // for (long long i=max(2ll,l);i<=r;i++)",
"    //     if (P[i-l]) cout << i << ' ';",
"}",
"// P[i-l] = 1 if i is prime, and vice versa",
"",
"bool isPrime(long long n) {",
"",
"    if (n == 2 || n == 3)",
"        return true;",
"    if (n <= 1 || n % 2 == 0 || n % 3 == 0)",
"        return false;",
"    for (long long i = 5; i <= sqrt(n); i += 6)",
"        if (n % i == 0 || n % (i + 2) == 0)",
"            return false;",
"",
"    return true;",
"}",
"/// checking primes - isPrime(n)=1 if n is prime, and vice versa",
"",
"bool P[N];",
"void Sieve(int n) {",
"",
"    P[0] = P[1] = 1;",
"    for (int i = 2; i <= sqrt(n); i++)",
"        if (!P[i])",
"            for (int j = i * i; j <= n; j += i)",
"                P[j] = 1;",
"}",
"// P[i] = 0 if i is prime, and vice versa",
"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --",
"",
"struct MillerRabin {",
"",
"    pair<ll, ll> factor(ll n) {",
"",
"        ll s = 0;",
"        while ((n & 1) == 0) {",
"",
"            s++;",
"            n >>= 1;",
"        }",
"",
"        return make_pair(s, n);",
"    }",
"",
"    ll pow(ll a, ll d, ll n) {",
"",
"        ll res = 1;",
"        a = a % n;",
"",
"        while (d > 0) {",
"",
"            if (d & 1)",
"                res = res * a % n;",
"            d >>= 1;",
"            a = a * a % n;",
"        }",
"",
"        return res;",
"    }",
"",
"    bool checkA(ll s, ll d, ll n, ll a) {",
"",
"        if (n == a)",
"            return true;",
"        ll p = pow(a, d, n);",
"        if (p == 1)",
"            return true;",
"",
"        for (; s > 0; s--) {",
"",
"            if (p == n - 1)",
"                return true;",
"            p = p * p % n;",
"        }",
"",
"        return false;",
"    }",
"",
"    bool isPrime(ll n) {",
"",
"        if (n < 2)",
"            return false;",
"        if ((n & 1) == 0)",
"            return (n == 2);",
"        ll s, d;",
"        tie(s, d) = factor(n - 1);",
"        return (checkA(s, d, n, 2) && checkA(s, d, n, 3));",
"    }",
"",
"} Miller;",
"",
"",
"//2, 3, 5, 7, 11, 13, 17 (1e14)",
"// 2, 3, 5, 7, 11, 13, 17, 19, 23 (1e18)",

],
"description": "template"
}
}